name: Release

on:
  push:
    branches: ["main", "test-**"]

env:
  BUILD_TYPE: Release
  GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
  PYTHONUTF8: 1

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  versioning:
    name: Semantic Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
      - run: npm install --save-dev --prefix ./package-ci @semantic-release/exec @semantic-release/git conventional-changelog-eslint semantic-release && npx --prefix ./package-ci semantic-release

  rebase:
    name: Rebase Dev. Branch
    if: github.ref_name == 'main'
    needs: versioning
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Perform rebase
        run: |
          git fetch origin main
          git checkout main-dev
          git rebase origin/main

      - name: Push changes
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.SEMANTIC_REBASE_TOKEN }}
          branch: main-dev
          unprotect_reviews: True
          force: True

  build_wheels:
    name: Build Wheels for ${{ matrix.os }}
    if: github.ref_name == 'main'
    runs-on: ${{ matrix.os }}
    needs: versioning
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macOS-11, windows-2022]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      - name: Setup Docker
        if: matrix.os == 'ubuntu-22.04'
        uses: docker-practice/actions-setup-docker@master

      - name: Setup QEMU
        if: matrix.os == 'ubuntu-22.04'
        uses: docker/setup-qemu-action@v2.1.0

      - name: Install CIBuildWheel
        run: python -m pip install --no-cache-dir cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish_python:
    name: Publish Python
    if: github.ref_name == 'main'
    needs: build_wheels
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://pypi.org/p/simsimd
    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          path: ./dist/

      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ./dist/artifact
          verbose: true
          print-hash: true

  build_javascript:
    name: Build JavaScript
    runs-on: ${{ matrix.os }}
    needs: versioning
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
          - x86
        os:
          - macos-latest
          - ubuntu-22.04
          - windows-latest
        exclude:
          - arch: x86
            os: macos-latest
          - arch: x86
            os: ubuntu-22.04
    env:
      CC: gcc-12
      CXX: g++-12

    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4
      - run: git submodule update --init --recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: ${{ matrix.arch }}

      - name: Update compilers
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential libjemalloc-dev libomp-dev gcc-12 g++-12

      - run: npm ci
      - run: npm run prebuild
        if: matrix.os != 'macos-latest'
      - run: npm run prebuild-darwin-x64+arm64
        if: matrix.os == 'macos-latest'
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: ${{ matrix.os }}
          path: prebuilds
          retention-days: 1

      - uses: actions/upload-artifact@v4
        if: matrix.os != 'macos-latest'
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: prebuilds
          retention-days: 1

  publish_javascript:
    name: Publish JavaScript
    needs: build_javascript
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - run: git submodule update --init --recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/download-artifact@v4
        with:
          path: prebuilds

      - name: Test publish
        run: npm publish --dry-run
        if: github.ref != 'refs/heads/main'

      - name: Publish
        uses: JS-DevTools/npm-publish@v3
        if: github.ref == 'refs/heads/main'
        with:
          token: ${{ secrets.NPM_TOKEN }}
