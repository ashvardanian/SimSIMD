{
    "files.associations": {
        "array": "cpp",
        "string_view": "cpp",
        "random": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "cinttypes": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "codecvt": "cpp",
        "compare": "cpp",
        "concepts": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "string": "cpp",
        "unordered_map": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "ratio": "cpp",
        "regex": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numbers": "cpp",
        "ostream": "cpp",
        "semaphore": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "stop_token": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "typeinfo": "cpp",
        "complex": "cpp",
        "immintrin.h": "c",
        "__bit_reference": "cpp",
        "__bits": "cpp",
        "__config": "cpp",
        "__debug": "cpp",
        "__errc": "cpp",
        "__hash_table": "cpp",
        "__locale": "cpp",
        "__mutex_base": "cpp",
        "__node_handle": "cpp",
        "__split_buffer": "cpp",
        "__threading_support": "cpp",
        "__tuple": "cpp",
        "__verbose_abort": "cpp",
        "charconv": "cpp",
        "ios": "cpp",
        "locale": "cpp",
        "optional": "cpp",
        "variant": "cpp",
        "__nullptr": "cpp",
        "unordered_set": "cpp",
        "span": "cpp",
        "arm_neon.h": "c",
        "__tree": "cpp",
        "filesystem": "cpp",
        "simsimd.h": "c",
        "format": "c",
        "execution": "cpp",
        "math.h": "c",
        "float.h": "c",
        "text_encoding": "cpp",
        "stdio.h": "c"
    },
    "cSpell.words": [
        "allclose",
        "Altra",
        "Axion",
        "bfloat",
        "bitalg",
        "BLAS",
        "castsi",
        "CBLAS",
        "cdist",
        "cpuid",
        "cpusysregs",
        "dtype",
        "dtypes",
        "elif",
        "errno",
        "FMLA",
        "fmsub",
        "Fugaku",
        "geospatial",
        "Haswell",
        "jaccard",
        "jensenshannon",
        "Kabsch",
        "Kadlec",
        "kann",
        "Kullback",
        "kullbackleibler",
        "Kurz",
        "LAPACK",
        "Leibler",
        "Lemire",
        "loadu",
        "Logarithmotechnia",
        "maccs",
        "maskz",
        "napi",
        "ndarray",
        "Needleman",
        "Neoverse",
        "numpy",
        "parallelizable",
        "permutevar",
        "Raphson",
        "RMSD",
        "rsqrt",
        "RTOL",
        "scikit",
        "scipy",
        "setzero",
        "simd",
        "simsimd",
        "Skylake",
        "sqeuclidean",
        "SVMs",
        "tanimoto",
        "tparam",
        "typedarray",
        "unclipped",
        "unnormalized",
        "unsw",
        "Vardanian",
        "vbmi",
        "vdot",
        "vectorizable",
        "vfmsq",
        "Vincenty's",
        "VNNI",
        "vpopcntdq",
        "Wojciech",
        "Wunsch",
        "Zilla"
    ],
    "python.testing.pytestArgs": [
        "scripts/test.py"
    ],
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true
}